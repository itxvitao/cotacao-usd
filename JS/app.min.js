// app.min.js

const mapaFlags = {
  USD: "us",
  BRL: "br",
  EUR: "eu",
  GBP: "gb"
};

const nomesMoedas = {
  USD: "D√≥lar Americano",
  BRL: "Real Brasileiro",
  EUR: "Euro",
  GBP: "Libra Esterlina"
};


const paresSuportados = new Set([
  "USDBRL", "BRLUSD",
  "EURBRL", "BRLEUR",
  "GBPBRL", "BRLGBP",
  "EURUSD", "USDEUR",
  "USDGBP", "GBPUSD",
  "GBPEUR", "EURGBP"
]);

function atualizarBandeira(tipo) {
  const moeda = document.getElementById(`moeda${tipo}`).value;
  document.getElementById(`flag${tipo}`).src = `https://flagcdn.com/${mapaFlags[moeda]}.svg`;
}

function inverterMoedas() {
  const moedaOrigem = document.getElementById("moedaOrigem");
  const moedaDestino = document.getElementById("moedaDestino");

  const temp = moedaOrigem.value;
  moedaOrigem.value = moedaDestino.value;
  moedaDestino.value = temp;

  atualizarBandeira("Origem");
  atualizarBandeira("Destino");
  atualizarGraficoMoeda(); // Atualiza gr√°fico ao inverter
}

function toggleTheme() {
  const html = document.documentElement;
  const current = html.getAttribute("data-theme");
  const next = current === "light" ? "dark" : "light";
  html.setAttribute("data-theme", next);
  localStorage.setItem("theme", next);
  carregarWidgetTradingView();
  atualizarGraficoMoeda(); // Atualiza gr√°fico com novo tema
}

async function converterMoeda() {
  const origem = document.getElementById("moedaOrigem").value;
  const destino = document.getElementById("moedaDestino").value;
  const nomeMoeda = nomesMoedas[origem] || origem;
  const valor = parseFloat(document.getElementById("valorOrigem").value);
  const spread = parseFloat(document.getElementById("spread").value);
  const tarifaUsd = parseFloat(document.getElementById("tarifa").value) || 0;
  const iof = 0.011;

  if (!valor || valor <= 0 || spread < 1) {
    alert("Digite valores v√°lidos.");
    return;
  }

  try {
    const resposta = await fetch(`https://economia.awesomeapi.com.br/json/last/${origem}-${destino}`);
    const dados = await resposta.json();
    const par = dados[`${origem}${destino}`];
    const cotacaoBase = parseFloat(par.bid);
    const taxa = cotacaoBase * spread;
    const valorConvertido = valor * taxa;
    const valorTarifa = tarifaUsd * taxa;
    const valorIOF = valorConvertido * iof;
    const totalFinal = valorConvertido + valorIOF + valorTarifa;

    document.getElementById("valorDestino").value = totalFinal.toFixed(2);

    document.getElementById("resultado").innerHTML = `
      <div style="background-color: #eeeeee; border-left: 6px solid #F5C332; border-radius: 12px; padding: 20px; font-family: 'Montserrat', sans-serif; margin-top: 30px;">
        <p style="margin: 0 0 8px; font-weight: 600; color: #1a1a1a;">üíµ Cota√ß√£o ${nomeMoeda} - Faz Consulting</p>
        <p style="margin: 0 0 20px; color: #444;">Data: ${new Date().toLocaleDateString('pt-BR')} - ${new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}</p>

        <p style="margin: 6px 0;"><strong>Valor em ${origem}:</strong> ${valor.toLocaleString('pt-BR', { style: 'currency', currency: origem })}</p>
        <p style="margin: 6px 0;"><strong>Cota√ß√£o utilizada:</strong> R$ ${taxa.toFixed(5)}</p>
        <p style="margin: 6px 0;"><strong>IOF (1,1%):</strong> R$ ${valorIOF.toFixed(2)}</p>
        <p style="margin: 6px 0;"><strong>Tarifa:</strong> R$ ${valorTarifa.toFixed(2)}</p>

        <p style="margin: 20px 0 10px; font-weight: bold; font-size: 1.4em; color: #F5C332;">‚úÖ Total: R$ ${totalFinal.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</p>

        <p style="margin-top: 20px; font-size: 0.95em; color: #666; font-style: italic;">
          üìå Para realizarmos a opera√ß√£o, √© necess√°rio o envio do comprovante de pagamento.
        </p>
      </div>
    `;
  } catch (e) {
    document.getElementById("resultado").innerText = "Erro ao obter cota√ß√£o.";
  }
}

function carregarWidgetTradingView() {
  const container = document.getElementById("tradingview-widget");
  container.innerHTML = "";

  const script = document.createElement("script");
  script.src = "https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js";
  script.async = true;
  script.innerHTML = JSON.stringify({
    symbols: [
      { description: "USDBRL", proName: "FX_IDC:USDBRL" },
      { description: "EURBRL", proName: "FX_IDC:EURBRL" },
      { description: "GBPBRL", proName: "FX_IDC:GBPBRL" },
      { description: "BRLUSD", proName: "FX_IDC:BRLUSD" },
      { description: "BRLEUR", proName: "FX_IDC:BRLEUR" },
      { description: "BRLGBP", proName: "FX_IDC:BRLGBP" }
    ],
    showSymbolLogo: true,
    isTransparent: false,
    displayMode: "adaptive",
    colorTheme: document.documentElement.getAttribute("data-theme") === "light" ? "light" : "dark",
    locale: "br"
  });
  container.appendChild(script);
}

function atualizarGraficoMoeda() {
  const container = document.getElementById("graficoMoeda");
  container.innerHTML = "";

  const origem = document.getElementById("moedaOrigem").value;
  const destino = document.getElementById("moedaDestino").value;

  if (origem === destino) {
    container.innerHTML = `<p style="text-align:center; color:var(--text-secondary); margin-top:20px;">
      Selecione moedas diferentes para visualizar o gr√°fico.
    </p>`;
    return;
  }

  const par = `${origem}${destino}`;
  if (!paresSuportados.has(par)) {
    container.innerHTML = `<p style="text-align:center; color:var(--text-secondary); margin-top:20px;">
      Este par de moedas ainda n√£o √© suportado para exibi√ß√£o de gr√°fico.
    </p>`;
    return;
  }

  const symbol = `FX_IDC:${par}`;

  const script = document.createElement("script");
  script.src = "https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js";
  script.async = true;
  script.innerHTML = JSON.stringify({
    symbol: symbol,
    width: "100%",
    height: 220,
    locale: "br",
    dateRange: "12M",
    colorTheme: document.documentElement.getAttribute("data-theme") === "light" ? "light" : "dark",
    isTransparent: false,
    autosize: true
  });

  container.appendChild(script);
}

// Executa na inicializa√ß√£o
document.addEventListener("DOMContentLoaded", () => {
  const temaSalvo = localStorage.getItem("theme");
  if (temaSalvo) {
    document.documentElement.setAttribute("data-theme", temaSalvo);
  }
  carregarWidgetTradingView();
  atualizarGraficoMoeda();
});
